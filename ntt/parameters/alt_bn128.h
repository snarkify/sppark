// Copyright Supranational LLC
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0

#if defined(__GNUC__) || defined(__clang__)
#define FR_T(vec_t, ...)                                                       \
  fr_t {                                                                       \
    (vec_t) { __VA_ARGS__ }                                                    \
  }
#else
#define FR_T(vec_t, ...)                                                       \
  fr_t {                                                                       \
    vec_t { __VA_ARGS__ }                                                      \
  }
#endif

const fr_t group_gen = FR_T(vec256, 0x3057819e4fffffdbu, 0x307f6d866832bb01u,
                            0x5c65ec9f484e3a89u, 0x0180a96573d3d9f8u);

const fr_t group_gen_inverse =
    FR_T(vec256, 0xf41575289db6db6du, 0x07daec5e847b8b05u, 0xea0fce347eecc0e2u,
         0x02017ed283b7fb4fu);

const int S = 28;

const fr_t forward_roots_of_unity[S + 1] = {
    FR_T(vec256, 0xac96341c4ffffffbu, 0x36fc76959f60cd29u, 0x666ea36f7879462eu,
         0x0e0a77c19a07df2fu),
    FR_T(vec256, 0x974bc177a0000006u, 0xf13771b2da58a367u, 0x51e1a2470908122eu,
         0x2259d6b14729c0fau),
    FR_T(vec256, 0x7f753d979edcef8bu, 0x5f3f172cb1479120u, 0x8db1627974096c6eu,
         0x2b377b3539c108cfu),
    FR_T(vec256, 0xf8ad4ae2b5ad7c3fu, 0x2d60c6ff83cb85beu, 0xd976fd2b5d9429f7u,
         0x24407ce73f9ad9a9u),
    FR_T(vec256, 0xf4b67d7c742f8f03u, 0x681b2ddc63d068ccu, 0x8ce5bcef1bfb576au,
         0x167c2951d2b63cfeu),
    FR_T(vec256, 0x2214f7b1bf574c64u, 0x28f9232ff7317df2u, 0xe57584a8b0ad75cdu,
         0x2b81fb59dc176d03u),
    FR_T(vec256, 0xb551f1ae6e709e42u, 0x9b982913ddc071ceu, 0x647356e94280050eu,
         0x09d3b806fc07f5edu),
    FR_T(vec256, 0xab140d06b15d5380u, 0x8c2f3accbc315b97u, 0x785937259204994fu,
         0x1cb2f3f059e22634u),
    FR_T(vec256, 0x7f8f93319ea39c00u, 0x7b251059f9cc5782u, 0x5683bd67cdfb537cu,
         0x17ecc6ae18a89bacu),
    FR_T(vec256, 0xc9c8928f92090433u, 0xd94701a67fd9f4a3u, 0xcee655fbfd8f278bu,
         0x158e4570172d0edeu),
    FR_T(vec256, 0x9d59f9756620a513u, 0x33e745a3ea015799u, 0x8996e2bf60bfdd6cu,
         0x22a6ef02b735e2c7u),
    FR_T(vec256, 0x4951e9fc5d00762eu, 0x767dad82c164aee5u, 0x5fe1aff1424e22f2u,
         0x2365ebedf8b01397u),
    FR_T(vec256, 0xa3a44167563e01d9u, 0x2c985eba520cba25u, 0x630be0929f706d21u,
         0x0f8cad63348de52eu),
    FR_T(vec256, 0x98e86e890819661au, 0xa58971c2b43d3494u, 0xd8cb7d4d416eaf0cu,
         0x0104d4227cef5927u),
    FR_T(vec256, 0x2a136f90fe079611u, 0x9091953b5a8c7132u, 0xcddff23737965037u,
         0x0c29a15e02149426u),
    FR_T(vec256, 0x6d69644c820e72d4u, 0x30633dc87372c20cu, 0x573b0c41425a9b9du,
         0x1e58427fa00a2717u),
    FR_T(vec256, 0x9401b49251d3b810u, 0xde3c98f5348fc09cu, 0xcfb5198b07d49383u,
         0x29ecce5b467f0c63u),
    FR_T(vec256, 0x8f57f7e680e143e0u, 0x2b8a2ef9c54adb7bu, 0xca10e38f3b6bdf93u,
         0x292db75e675d0200u),
    FR_T(vec256, 0x2fe6c8b8acea23e7u, 0xf7ceb5058f8d1ef1u, 0x5127841f7c12cdf0u,
         0x21226f7db7b9a830u),
    FR_T(vec256, 0x2475b173007e2dceu, 0x622daa5f640579eau, 0xf5ae76d7eef167dcu,
         0x25ee10b1886a297fu),
    FR_T(vec256, 0x01ebb344169e4733u, 0x8976dd6a89b5f820u, 0xa29ffb034c0e34ddu,
         0x19b3ac159c61e200u),
    FR_T(vec256, 0x620764dd4afa117du, 0x911cac718b2d9357u, 0x08772a211856f8bau,
         0x1768f555a1f560c1u),
    FR_T(vec256, 0x45eda849cc3a8b64u, 0x7d5abaf447a56e90u, 0xbf46e1efafc35b2bu,
         0x17fdfda3ee38483eu),
    FR_T(vec256, 0xb0c7cebc6ac468efu, 0x1e7eb3f627af496fu, 0x4a92a3cccd54aa11u,
         0x14471d6daec3b85fu),
    FR_T(vec256, 0xed5e9945897f06ccu, 0x63c5d176c7b9f869u, 0x16449d47d282b979u,
         0x232a877f5dcd55dcu),
    FR_T(vec256, 0xb91c3f6acb3c1ddau, 0x9ec4a4645473a018u, 0xe9f95d646b0fdf0cu,
         0x2f7abadcc8c42ef6u),
    FR_T(vec256, 0x7640c5d5f7ccc56eu, 0xe716f31fd8f3f2a7u, 0x76dc9ef6f430ff47u,
         0x221cf465364e38dbu),
    FR_T(vec256, 0xe1ef40ad0ec57db3u, 0xcd1ac2ceee40b76bu, 0x1c8ccf8b4dfbd166u,
         0x10f18813ec337b30u),
    FR_T(vec256, 0x9632c7c5b639feb8u, 0x985ce3400d0ff299u, 0xb2dd880001b0ecd8u,
         0x1d69070d6d98ce29u),
};

const fr_t inverse_roots_of_unity[S + 1] = {
    FR_T(vec256, 0xac96341c4ffffffbu, 0x36fc76959f60cd29u, 0x666ea36f7879462eu,
         0x0e0a77c19a07df2fu),
    FR_T(vec256, 0x974bc177a0000006u, 0xf13771b2da58a367u, 0x51e1a2470908122eu,
         0x2259d6b14729c0fau),
    FR_T(vec256, 0xc46cb7fc51231076u, 0xc8f4d11bc871df70u, 0x2a9ee33d0d77ebeeu,
         0x052cd33da770975au),
    FR_T(vec256, 0x3207cbdddda29e9bu, 0x77ca35a6262fbefcu, 0x3d7e07dfb059de38u,
         0x12a91d5f32bd1157u),
    FR_T(vec256, 0x302fa787a5d2b60eu, 0x80cc914fb54036b7u, 0x4f65c0b3d235eb3bu,
         0x0adb12085108a15eu),
    FR_T(vec256, 0x283ae711001fcfb4u, 0x05ead253feb4f32au, 0xcbc338abfa1144cau,
         0x300e4c10db78fc8eu),
    FR_T(vec256, 0xb2211e992a8a877du, 0x80b162ac92fa2b37u, 0xf48230c8c7f9618fu,
         0x247a85ad73d880c1u),
    FR_T(vec256, 0x1e3f3f9b7261bc35u, 0x09978fb679fb9b91u, 0xbec068ef25866c4bu,
         0x201f4e12350bbbe9u),
    FR_T(vec256, 0xd9fa4b35ee413765u, 0x08ac33833461e883u, 0x4230283b64d125f9u,
         0x1ed59f9ebe7a8831u),
    FR_T(vec256, 0xd26c686239b5b446u, 0xe3fa6fdd5a406c9cu, 0x42fc75e02ebad019u,
         0x09cf225353d7f94cu),
    FR_T(vec256, 0x07c2177c3b3fea61u, 0xa83f10b42e1b7762u, 0x28ef82d5deb936beu,
         0x0423a2949124f2bbu),
    FR_T(vec256, 0xb09e9c403dd5d3e8u, 0x721c3f3d5a11e2eeu, 0xedae9d841bacced3u,
         0x11a01c7ed0ffcc33u),
    FR_T(vec256, 0xfa70a02c372988b4u, 0xf2bb7c7886a3be8fu, 0x465ac77d9e749fe3u,
         0x1ee54ba9f8cd0adeu),
    FR_T(vec256, 0x2223413e729281bau, 0x6760a25d86f87145u, 0x6577028f5b6c7998u,
         0x1fa7a457ceabd462u),
    FR_T(vec256, 0x6ba35e8a5b34fc52u, 0xc7eed92f1738ad54u, 0x1b37fd9e4df55656u,
         0x08c61bd5a1366af8u),
    FR_T(vec256, 0xeb184f05b57c16b7u, 0x1eced2d8a83d1ee3u, 0x0d29179e68c73866u,
         0x27860378c68b7556u),
    FR_T(vec256, 0xd7054ecacc33d26cu, 0xd4b3748f93bfc111u, 0x3ed11316f83bf8dcu,
         0x1c29b55321ff8169u),
    FR_T(vec256, 0x92c59058ea9bd008u, 0x86d70c6901c82e2eu, 0x656638ac7c990ad4u,
         0x3030a7addb15f411u),
    FR_T(vec256, 0xb780cfa734038b0fu, 0x24503e25b2d44dedu, 0x33ac25b17761636eu,
         0x28b8f091ebc464bdu),
    FR_T(vec256, 0xa2519303f512d862u, 0x9f0d7a6986ffb1dbu, 0x2c3d16dfe1b97696u,
         0x1a7d94795ff01897u),
    FR_T(vec256, 0x7e2b9435188061fbu, 0xb4fcf793d0b3d1cau, 0x161097a8830f9e9eu,
         0x1169710e640ed964u),
    FR_T(vec256, 0x66f722541194bdc0u, 0x3f16da8c453b03dfu, 0xecfe5ac34f3111e6u,
         0x20b3e58257f6232au),
    FR_T(vec256, 0x35de46572c708e22u, 0x227f972fba4bf63du, 0xaf98d5e180c1f501u,
         0x0862751f9478ee97u),
    FR_T(vec256, 0x317ed5465bc7771fu, 0x9ac6c2912617bd8du, 0x9cb222a7c5f12e14u,
         0x0b33f81876bc6682u),
    FR_T(vec256, 0x5eac33e371a5c4ffu, 0x6c9bc879ab8b1011u, 0xc3d638ad2904c3d4u,
         0x0e1491ecfae559a9u),
    FR_T(vec256, 0x2600317b9f773e40u, 0x79a52b93a3852d1cu, 0x5c1e40bdbf423380u,
         0x117e2c5933902b0cu),
    FR_T(vec256, 0x24403c161e9ab1d1u, 0x8b1a318d59727cbeu, 0xde23cb36e1129649u,
         0x01a3c8e196abc572u),
    FR_T(vec256, 0x02337a70c7ac15e7u, 0x7f1a04b5627abba2u, 0x91488c4d504d8a06u,
         0x2d84d23c5d8bf575u),
    FR_T(vec256, 0x05f05c05affb3d96u, 0xb8e594ebfc3b5137u, 0x60314620b85bc4c1u,
         0x2a4129bebb6fc591u),
};

const fr_t domain_size_inverse[S + 1] = {
    FR_T(vec256, 0xac96341c4ffffffbu, 0x36fc76959f60cd29u, 0x666ea36f7879462eu,
         0x0e0a77c19a07df2fu),
    FR_T(vec256, 0x783c14d81ffffffeu, 0xaf982f6f0c8d1eddu, 0x8f5f7492fcfd4f45u,
         0x1f37631a3d9cbfacu),
    FR_T(vec256, 0xbc1e0a6c0fffffffu, 0xd7cc17b786468f6eu, 0x47afba497e7ea7a2u,
         0x0f9bb18d1ece5fd6u),
    FR_T(vec256, 0x0000000000000000u, 0x0000000000000000u, 0x0000000000000000u,
         0x2000000000000000u),
    FR_T(vec256, 0x0000000000000000u, 0x0000000000000000u, 0x0000000000000000u,
         0x1000000000000000u),
    FR_T(vec256, 0x0000000000000000u, 0x0000000000000000u, 0x0000000000000000u,
         0x0800000000000000u),
    FR_T(vec256, 0x0000000000000000u, 0x0000000000000000u, 0x0000000000000000u,
         0x0400000000000000u),
    FR_T(vec256, 0x0000000000000000u, 0x0000000000000000u, 0x0000000000000000u,
         0x0200000000000000u),
    FR_T(vec256, 0x0000000000000000u, 0x0000000000000000u, 0x0000000000000000u,
         0x0100000000000000u),
    FR_T(vec256, 0x0000000000000000u, 0x0000000000000000u, 0x0000000000000000u,
         0x0080000000000000u),
    FR_T(vec256, 0x0000000000000000u, 0x0000000000000000u, 0x0000000000000000u,
         0x0040000000000000u),
    FR_T(vec256, 0x0000000000000000u, 0x0000000000000000u, 0x0000000000000000u,
         0x0020000000000000u),
    FR_T(vec256, 0x0000000000000000u, 0x0000000000000000u, 0x0000000000000000u,
         0x0010000000000000u),
    FR_T(vec256, 0x0000000000000000u, 0x0000000000000000u, 0x0000000000000000u,
         0x0008000000000000u),
    FR_T(vec256, 0x0000000000000000u, 0x0000000000000000u, 0x0000000000000000u,
         0x0004000000000000u),
    FR_T(vec256, 0x0000000000000000u, 0x0000000000000000u, 0x0000000000000000u,
         0x0002000000000000u),
    FR_T(vec256, 0x0000000000000000u, 0x0000000000000000u, 0x0000000000000000u,
         0x0001000000000000u),
    FR_T(vec256, 0x0000000000000000u, 0x0000000000000000u, 0x0000000000000000u,
         0x0000800000000000u),
    FR_T(vec256, 0x0000000000000000u, 0x0000000000000000u, 0x0000000000000000u,
         0x0000400000000000u),
    FR_T(vec256, 0x0000000000000000u, 0x0000000000000000u, 0x0000000000000000u,
         0x0000200000000000u),
    FR_T(vec256, 0x0000000000000000u, 0x0000000000000000u, 0x0000000000000000u,
         0x0000100000000000u),
    FR_T(vec256, 0x0000000000000000u, 0x0000000000000000u, 0x0000000000000000u,
         0x0000080000000000u),
    FR_T(vec256, 0x0000000000000000u, 0x0000000000000000u, 0x0000000000000000u,
         0x0000040000000000u),
    FR_T(vec256, 0x0000000000000000u, 0x0000000000000000u, 0x0000000000000000u,
         0x0000020000000000u),
    FR_T(vec256, 0x0000000000000000u, 0x0000000000000000u, 0x0000000000000000u,
         0x0000010000000000u),
    FR_T(vec256, 0x0000000000000000u, 0x0000000000000000u, 0x0000000000000000u,
         0x0000008000000000u),
    FR_T(vec256, 0x0000000000000000u, 0x0000000000000000u, 0x0000000000000000u,
         0x0000004000000000u),
    FR_T(vec256, 0x0000000000000000u, 0x0000000000000000u, 0x0000000000000000u,
         0x0000002000000000u),
    FR_T(vec256, 0x0000000000000000u, 0x0000000000000000u, 0x0000000000000000u,
         0x0000001000000000u),
};
#undef FR_T
